spring.datasource.url=jdbc:mysql://spring-security.c7gwie8sqa31.af-south-1.rds.amazonaws.com:3306/eazybank
spring.datasource.username=admin
spring.datasource.password=Tmi#2022
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI:http://localhost:8081/realms/eazybankdev/protocol/openid-connect/certs}

# Once the below 3 properties are set, make sure you are commenting out the jwt.jwk-set-uri property above as we no more need this property while using Opaque Token
# The 3 properties that I have pasted here are introspection-uri, introspection-client-id and introspection-client-secret
# In this way, we need to give details to the Resource Server which endpoint url that it has to call on the auth server whenever it wants to validate given access/opaque token
# Those details we are trying to mention with the help of these 3 properties.
# The value to this introspection-uri you can get from this well known openid configuration page of the auth server, i.e., http://localhost:8081/realms/eazybankdev/.well-known/openid-configuration
# In that page, you can find the introspection_endpoint value which you can use here as your default/dev environment introspection-uri value.
# As a next step, we need to provide the client-id and client-secret of the client that we have created in the auth server. These details my resource server can use to connect to the auth server and validate the token because my auth server is not going to simply accept any traffic from any random unknown servers/resources servers.
# So, resource servers as well need to be registered with the auth server and get the client-id and client-secret to communicate with the auth server when invoking introspection endpoint.
# See notes in notebook for more details on how to configure these properties - introspection-client-id and introspection-client-secret.
# With these, we have created 3 different properties that my resource server can use during the token introspection process.
# As a next step, we will head over to the ProjectSecurityConfig class and make some modifications their on the previous configurations that we had done regarding the jwt token validation.
spring.security.oauth2.resourceserver.opaque.introspection-uri= ${INTROSPECT_URI:http://localhost:8081/realms/eazybankdev/protocol/openid-connect/token/introspect}
spring.security.oauth2.resourceserver.opaque.introspection-client-id=${INTROSPECT_ID:eazybankintrospect}
spring.security.oauth2.resourceserver.opaque.introspection-client-secret=${INTROSPECT_SECRET:YwBiML6JqwIwhFengHACDMol7CkwbOpN}