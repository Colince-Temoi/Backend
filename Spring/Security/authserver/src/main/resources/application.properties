# You can try to compare notes around these propertied with that your instructor has in his GitHub repo.
# In this property I am trying to give a name to our application.
spring.application.name=${AS_NAME:authserver}

# This server is always going to start at the default port 9000. If you want to change this behavior, you know what to do, you have to override this default configuration by configuring/providing an environment property with the name "AS_SERVER_PORT". I am not using 8080 port reason being very simple - our resource server is also going to start at the same port. So, to avoid conflicts, I am trying to start my auth server at the port 9000.
server.port= ${AS_SERVER_PORT:9000}

# We have enabled the TRACE level logging for the Spring Security related logs
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}

# Database related configurations. We are going to use the same DB that we are using right now inside the resource server. Inside this DB, we have tables related to the customer(s) and Authorities. So from those tables, we will try to authenticate the end-user. So the entire authentication related logic is going to happen inside this auth server.
spring.datasource.url=jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:eazybank}
spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:Tmi@2022}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

# Here, I have mentioned the logging pattern so that we can understand all the logs easily.
logging.pattern.console = ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}